/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.productos.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ProductosAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6622437626658180558L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProductosAvro\",\"namespace\":\"org.productos.avro\",\"fields\":[{\"name\":\"Id\",\"type\":\"string\"},{\"name\":\"nombre\",\"type\":\"string\"},{\"name\":\"fecha\",\"type\":\"string\"},{\"name\":\"unidades\",\"type\":\"int\"},{\"name\":\"categoria\",\"type\":{\"type\":\"enum\",\"name\":\"CategoriaEnumAvro\",\"symbols\":[\"GRANOS\",\"LACTEOS\",\"FRUTAS\"]}},{\"name\":\"disponible\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ProductosAvro> ENCODER =
      new BinaryMessageEncoder<ProductosAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProductosAvro> DECODER =
      new BinaryMessageDecoder<ProductosAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ProductosAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ProductosAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ProductosAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ProductosAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ProductosAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ProductosAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ProductosAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ProductosAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence Id;
   private java.lang.CharSequence nombre;
   private java.lang.CharSequence fecha;
   private int unidades;
   private org.productos.avro.CategoriaEnumAvro categoria;
   private boolean disponible;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProductosAvro() {}

  /**
   * All-args constructor.
   * @param Id The new value for Id
   * @param nombre The new value for nombre
   * @param fecha The new value for fecha
   * @param unidades The new value for unidades
   * @param categoria The new value for categoria
   * @param disponible The new value for disponible
   */
  public ProductosAvro(java.lang.CharSequence Id, java.lang.CharSequence nombre, java.lang.CharSequence fecha, java.lang.Integer unidades, org.productos.avro.CategoriaEnumAvro categoria, java.lang.Boolean disponible) {
    this.Id = Id;
    this.nombre = nombre;
    this.fecha = fecha;
    this.unidades = unidades;
    this.categoria = categoria;
    this.disponible = disponible;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Id;
    case 1: return nombre;
    case 2: return fecha;
    case 3: return unidades;
    case 4: return categoria;
    case 5: return disponible;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Id = (java.lang.CharSequence)value$; break;
    case 1: nombre = (java.lang.CharSequence)value$; break;
    case 2: fecha = (java.lang.CharSequence)value$; break;
    case 3: unidades = (java.lang.Integer)value$; break;
    case 4: categoria = (org.productos.avro.CategoriaEnumAvro)value$; break;
    case 5: disponible = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'Id' field.
   * @return The value of the 'Id' field.
   */
  public java.lang.CharSequence getId() {
    return Id;
  }


  /**
   * Sets the value of the 'Id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.Id = value;
  }

  /**
   * Gets the value of the 'nombre' field.
   * @return The value of the 'nombre' field.
   */
  public java.lang.CharSequence getNombre() {
    return nombre;
  }


  /**
   * Sets the value of the 'nombre' field.
   * @param value the value to set.
   */
  public void setNombre(java.lang.CharSequence value) {
    this.nombre = value;
  }

  /**
   * Gets the value of the 'fecha' field.
   * @return The value of the 'fecha' field.
   */
  public java.lang.CharSequence getFecha() {
    return fecha;
  }


  /**
   * Sets the value of the 'fecha' field.
   * @param value the value to set.
   */
  public void setFecha(java.lang.CharSequence value) {
    this.fecha = value;
  }

  /**
   * Gets the value of the 'unidades' field.
   * @return The value of the 'unidades' field.
   */
  public int getUnidades() {
    return unidades;
  }


  /**
   * Sets the value of the 'unidades' field.
   * @param value the value to set.
   */
  public void setUnidades(int value) {
    this.unidades = value;
  }

  /**
   * Gets the value of the 'categoria' field.
   * @return The value of the 'categoria' field.
   */
  public org.productos.avro.CategoriaEnumAvro getCategoria() {
    return categoria;
  }


  /**
   * Sets the value of the 'categoria' field.
   * @param value the value to set.
   */
  public void setCategoria(org.productos.avro.CategoriaEnumAvro value) {
    this.categoria = value;
  }

  /**
   * Gets the value of the 'disponible' field.
   * @return The value of the 'disponible' field.
   */
  public boolean getDisponible() {
    return disponible;
  }


  /**
   * Sets the value of the 'disponible' field.
   * @param value the value to set.
   */
  public void setDisponible(boolean value) {
    this.disponible = value;
  }

  /**
   * Creates a new ProductosAvro RecordBuilder.
   * @return A new ProductosAvro RecordBuilder
   */
  public static org.productos.avro.ProductosAvro.Builder newBuilder() {
    return new org.productos.avro.ProductosAvro.Builder();
  }

  /**
   * Creates a new ProductosAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProductosAvro RecordBuilder
   */
  public static org.productos.avro.ProductosAvro.Builder newBuilder(org.productos.avro.ProductosAvro.Builder other) {
    if (other == null) {
      return new org.productos.avro.ProductosAvro.Builder();
    } else {
      return new org.productos.avro.ProductosAvro.Builder(other);
    }
  }

  /**
   * Creates a new ProductosAvro RecordBuilder by copying an existing ProductosAvro instance.
   * @param other The existing instance to copy.
   * @return A new ProductosAvro RecordBuilder
   */
  public static org.productos.avro.ProductosAvro.Builder newBuilder(org.productos.avro.ProductosAvro other) {
    if (other == null) {
      return new org.productos.avro.ProductosAvro.Builder();
    } else {
      return new org.productos.avro.ProductosAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for ProductosAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProductosAvro>
    implements org.apache.avro.data.RecordBuilder<ProductosAvro> {

    private java.lang.CharSequence Id;
    private java.lang.CharSequence nombre;
    private java.lang.CharSequence fecha;
    private int unidades;
    private org.productos.avro.CategoriaEnumAvro categoria;
    private boolean disponible;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.productos.avro.ProductosAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Id)) {
        this.Id = data().deepCopy(fields()[0].schema(), other.Id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.nombre)) {
        this.nombre = data().deepCopy(fields()[1].schema(), other.nombre);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.fecha)) {
        this.fecha = data().deepCopy(fields()[2].schema(), other.fecha);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.unidades)) {
        this.unidades = data().deepCopy(fields()[3].schema(), other.unidades);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.categoria)) {
        this.categoria = data().deepCopy(fields()[4].schema(), other.categoria);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.disponible)) {
        this.disponible = data().deepCopy(fields()[5].schema(), other.disponible);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing ProductosAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(org.productos.avro.ProductosAvro other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.Id)) {
        this.Id = data().deepCopy(fields()[0].schema(), other.Id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.nombre)) {
        this.nombre = data().deepCopy(fields()[1].schema(), other.nombre);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.fecha)) {
        this.fecha = data().deepCopy(fields()[2].schema(), other.fecha);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.unidades)) {
        this.unidades = data().deepCopy(fields()[3].schema(), other.unidades);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.categoria)) {
        this.categoria = data().deepCopy(fields()[4].schema(), other.categoria);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.disponible)) {
        this.disponible = data().deepCopy(fields()[5].schema(), other.disponible);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'Id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return Id;
    }


    /**
      * Sets the value of the 'Id' field.
      * @param value The value of 'Id'.
      * @return This builder.
      */
    public org.productos.avro.ProductosAvro.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.Id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'Id' field has been set.
      * @return True if the 'Id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'Id' field.
      * @return This builder.
      */
    public org.productos.avro.ProductosAvro.Builder clearId() {
      Id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'nombre' field.
      * @return The value.
      */
    public java.lang.CharSequence getNombre() {
      return nombre;
    }


    /**
      * Sets the value of the 'nombre' field.
      * @param value The value of 'nombre'.
      * @return This builder.
      */
    public org.productos.avro.ProductosAvro.Builder setNombre(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.nombre = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'nombre' field has been set.
      * @return True if the 'nombre' field has been set, false otherwise.
      */
    public boolean hasNombre() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'nombre' field.
      * @return This builder.
      */
    public org.productos.avro.ProductosAvro.Builder clearNombre() {
      nombre = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'fecha' field.
      * @return The value.
      */
    public java.lang.CharSequence getFecha() {
      return fecha;
    }


    /**
      * Sets the value of the 'fecha' field.
      * @param value The value of 'fecha'.
      * @return This builder.
      */
    public org.productos.avro.ProductosAvro.Builder setFecha(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.fecha = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'fecha' field has been set.
      * @return True if the 'fecha' field has been set, false otherwise.
      */
    public boolean hasFecha() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'fecha' field.
      * @return This builder.
      */
    public org.productos.avro.ProductosAvro.Builder clearFecha() {
      fecha = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'unidades' field.
      * @return The value.
      */
    public int getUnidades() {
      return unidades;
    }


    /**
      * Sets the value of the 'unidades' field.
      * @param value The value of 'unidades'.
      * @return This builder.
      */
    public org.productos.avro.ProductosAvro.Builder setUnidades(int value) {
      validate(fields()[3], value);
      this.unidades = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'unidades' field has been set.
      * @return True if the 'unidades' field has been set, false otherwise.
      */
    public boolean hasUnidades() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'unidades' field.
      * @return This builder.
      */
    public org.productos.avro.ProductosAvro.Builder clearUnidades() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'categoria' field.
      * @return The value.
      */
    public org.productos.avro.CategoriaEnumAvro getCategoria() {
      return categoria;
    }


    /**
      * Sets the value of the 'categoria' field.
      * @param value The value of 'categoria'.
      * @return This builder.
      */
    public org.productos.avro.ProductosAvro.Builder setCategoria(org.productos.avro.CategoriaEnumAvro value) {
      validate(fields()[4], value);
      this.categoria = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'categoria' field has been set.
      * @return True if the 'categoria' field has been set, false otherwise.
      */
    public boolean hasCategoria() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'categoria' field.
      * @return This builder.
      */
    public org.productos.avro.ProductosAvro.Builder clearCategoria() {
      categoria = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'disponible' field.
      * @return The value.
      */
    public boolean getDisponible() {
      return disponible;
    }


    /**
      * Sets the value of the 'disponible' field.
      * @param value The value of 'disponible'.
      * @return This builder.
      */
    public org.productos.avro.ProductosAvro.Builder setDisponible(boolean value) {
      validate(fields()[5], value);
      this.disponible = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'disponible' field has been set.
      * @return True if the 'disponible' field has been set, false otherwise.
      */
    public boolean hasDisponible() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'disponible' field.
      * @return This builder.
      */
    public org.productos.avro.ProductosAvro.Builder clearDisponible() {
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProductosAvro build() {
      try {
        ProductosAvro record = new ProductosAvro();
        record.Id = fieldSetFlags()[0] ? this.Id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.nombre = fieldSetFlags()[1] ? this.nombre : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.fecha = fieldSetFlags()[2] ? this.fecha : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.unidades = fieldSetFlags()[3] ? this.unidades : (java.lang.Integer) defaultValue(fields()[3]);
        record.categoria = fieldSetFlags()[4] ? this.categoria : (org.productos.avro.CategoriaEnumAvro) defaultValue(fields()[4]);
        record.disponible = fieldSetFlags()[5] ? this.disponible : (java.lang.Boolean) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProductosAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProductosAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProductosAvro>
    READER$ = (org.apache.avro.io.DatumReader<ProductosAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.Id);

    out.writeString(this.nombre);

    out.writeString(this.fecha);

    out.writeInt(this.unidades);

    out.writeEnum(this.categoria.ordinal());

    out.writeBoolean(this.disponible);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.Id = in.readString(this.Id instanceof Utf8 ? (Utf8)this.Id : null);

      this.nombre = in.readString(this.nombre instanceof Utf8 ? (Utf8)this.nombre : null);

      this.fecha = in.readString(this.fecha instanceof Utf8 ? (Utf8)this.fecha : null);

      this.unidades = in.readInt();

      this.categoria = org.productos.avro.CategoriaEnumAvro.values()[in.readEnum()];

      this.disponible = in.readBoolean();

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.Id = in.readString(this.Id instanceof Utf8 ? (Utf8)this.Id : null);
          break;

        case 1:
          this.nombre = in.readString(this.nombre instanceof Utf8 ? (Utf8)this.nombre : null);
          break;

        case 2:
          this.fecha = in.readString(this.fecha instanceof Utf8 ? (Utf8)this.fecha : null);
          break;

        case 3:
          this.unidades = in.readInt();
          break;

        case 4:
          this.categoria = org.productos.avro.CategoriaEnumAvro.values()[in.readEnum()];
          break;

        case 5:
          this.disponible = in.readBoolean();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










